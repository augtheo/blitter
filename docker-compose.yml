services:
  blitter-api:
    build:
      context: ./
      dockerfile: blitter-api/Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${DB_NAME}
      - SPRING_DATASOURCE_USERNAME=${DB_USER}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASS}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8080:8080
    networks:
      - spring-postgresql
      - blitter-monitoring
  db:
    image: postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - spring-postgresql
  blitter-web:
    build:
      context: ./
      dockerfile: blitter-vite/Dockerfile
    volumes:
      - /project/node_modules
    depends_on:
      - blitter-api
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    networks:
      - blitter-monitoring
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana:latest
    ports:
      - 3060:3000
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    networks:
      - blitter-monitoring
volumes:
  db-data: {}
  prometheus_data:
  grafana-storage:
networks:
  spring-postgresql: {}
  blitter-monitoring: {}
