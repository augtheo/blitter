openapi: 3.0.0
info:
  title: blitter
  description: A RESTful API for blitter, a twitter clone
  version: 0.3.0
servers:
  - url: http://localhost:8080/
  - url: https://blitter.augtheo.com:8080/
tags:
  - name: Bleats
    description: Operations related to bleats
security:
  - blitterBearerAuth: []
paths:
  /auth:
    post:
      tags:
        - Authentication
      summary: Returns the JWT once authenticated
      responses:
        "200":
          description: Successfully authenticated. The JWT is returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt:
                    type: string
      security:
        - blitterBasicAuth: []
  /bleats:
    get:
      tags:
        - Bleats
      summary: Get a list of bleats
      description: Returns a list of bleats with pagination
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: The page number to retrieve (defaults to 1)
        - in: query
          name: per_page
          schema:
            type: integer
            default: 10
          description: The number of items per page to retrieve (defaults to 10)
        - in: query
          name: following_only
          schema:
            type: boolean
            default: false
          description: Limits bleats to only from users being followed
      operationId: getBleats
      responses:
        "200":
          description: A list of bleats
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedBleats"
    post:
      tags:
        - Bleats
      summary: Creates a new bleat
      description: Creates a new bleat
      operationId: postBleat
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BleatReq"
      responses:
        "201":
          description: The bleat was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BleatRes"
  /bleats/{id}:
    get:
      tags:
        - Bleats
      summary: Get a bleat by id
      description: returns a bleat
      operationId: getBleat
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Bleat
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BleatRes"
    patch: #TODO: Check if patch works as expected
      summary: Update a bleat by id
      tags:
        - Bleats
      operationId: updateBleat
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BleatReq"
      responses:
        "200":
          description: Return bleat
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BleatRes"
    delete:
      tags:
        - Bleats
      summary: Delete a bleat by id
      operationId: deleteBleat
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Successfully Deleted
  /bleats/{id}/toggleLike:
    post:
      tags:
        - Favourite
      summary: Toggle the like for a bleat by id
      deprecated: true
      operationId: toggleLikeBleat
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successfully toggled like
  /bleats/{id}/like:
    post:
      tags:
        - Favourite
      summary: Like bleat by id
      operationId: likeBleat
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successfully liked
  /bleats/{id}/unlike:
    post:
      tags:
        - Favourite
      summary: Unlike a bleat by id
      operationId: unlikeBleat
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successfully unliked
  /bleats/{id}/reply:
    get:
      tags:
        - Bleats
      summary: Get a list of replies to a bleat by id
      description: returns all the replies to this bleat
      operationId: getBleatReplies
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: The page number to retrieve (defaults to 1)
        - in: query
          name: per_page
          schema:
            type: integer
            default: 10
          description: The number of items per page to retrieve (defaults to 10)
      responses:
        "200":
          description: Bleat
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedBleats"
    post:
      tags:
        - Bleats
      summary: Post a reply to a bleat by id
      description: publish a reply to a bleat
      operationId: replyBleat
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BleatReq"
      responses:
        "201":
          description: Reply was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BleatRes"
  /register:
    post:
      tags:
        - Users
      summary: Creates a new user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterReq"
        required: true
      responses:
        "201":
          description: Created User
      security: []
  /users:
    get:
      tags:
        - Users
      description: returns the current user
      operationId: getSelf
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorRes"

  /users/{username}:
    get:
      tags:
        - Users
      description: returns a specific author
      operationId: getAuthor
      parameters:
        - name: username
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorRes"
  /users/{username}/bleats:
    get:
      tags:
        - Users
      summary: Get a list of bleats posted by user
      description: returns the list of  bleats by the author
      operationId: getBleatsByAuthor
      parameters:
        - name: username
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: The page number to retrieve (defaults to 1)
        - in: query
          name: per_page
          schema:
            type: integer
            default: 10
          description: The number of items per page to retrieve (defaults to 10)
      responses:
        "200":
          description: All the bleats posted by author
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedBleats"
  /users/{username}/liked:
    get:
      tags:
        - Users
      summary: Get a list of bleats liked by user
      operationId: getBleatsLikedByAuthor
      parameters:
        - name: username
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: All the bleats liked by {username}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BleatsRes"
  /users/{username}/follow:
    post:
      tags:
        - Users
      summary: Follow a user
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      operationId: followUser
      responses:
        "200":
          description: Successfully followed
  /users/{username}/unfollow:
    post:
      tags:
        - Users
      summary: Unfollow a user
      operationId: unfollowUser
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully unfollowed
  /users/{username}/following:
    get:
      tags:
        - Users
      summary: Get list of users the user is following
      operationId: getFollowingUsers
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AuthorRes"
components:
  securitySchemes:
    blitterBasicAuth:
      type: http
      scheme: basic
    blitterBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterReq:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        password:
          type: string
    BleatReq:
      type: object
      properties:
        message:
          type: string
    BleatRes:
      type: object
      properties:
        id:
          type: integer
          format: int64
        message:
          type: string
        author_username:
          type: string
        author_name:
          type: string
        authorProfileUrl:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
        likeCount:
          type: integer
        authorLiked:
          type: boolean
        replyCount:
          type: integer
    BleatsRes:
      type: array
      items:
        $ref: "#/components/schemas/BleatRes"
    PaginatedBleats:
      type: object
      properties:
        bleats:
          $ref: "#/components/schemas/BleatsRes"
        page:
          type: integer
        per_page:
          type: integer
        total_pages:
          type: integer
        total_bleats:
          type: integer
          format: int64
    AuthorRes:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        name:
          type: string
        following:
          type: boolean
          description: TRUE if the currently logged in user follows this author.
        follows:
          type: boolean
          description: TRUE  if the currently logged in user is followed by this author.
        followers:
          type: integer
        followees:
          type: integer
        profileUrl:
          type: string
